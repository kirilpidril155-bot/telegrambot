<!DOCTYPE html>
<html lang="ru">
<head>
<meta charset="utf-8" />
<meta name="viewport" content="width=device-width,initial-scale=1" />
<title>Mini App — Магазин</title>
<script src="https://telegram.org/js/telegram-web-app.js"></script>
<style>
  :root{--accent:#0088cc;--bg:#f5f5f5;--card:#fff;--muted:#666}
  *{box-sizing:border-box}
  body{margin:0;font-family:Arial,Helvetica,sans-serif;background:var(--bg);padding-bottom:80px}
  .container{padding:16px;max-width:980px;margin:0 auto}
  h1,h2{margin:6px 0 12px}
  /* Pages */
  .page{display:none}
  .page.active{display:block}
  /* City list */
  .grid{display:grid;grid-template-columns:repeat(2,1fr);gap:10px}
  .city-card{background:var(--card);padding:14px;border-radius:10px;text-align:center;font-weight:700;color:#fff;background:var(--accent);cursor:pointer;border:0}
  /* Header */
  .header{display:flex;align-items:center;justify-content:space-between;margin-bottom:10px}
  .current-city{font-weight:700;color:var(--accent)}
  .change-city{background:#eee;border:0;padding:6px 10px;border-radius:8px;cursor:pointer}
  /* Categories */
  .category{background:var(--card);border-radius:10px;padding:8px;margin-bottom:12px;box-shadow:0 1px 4px rgba(0,0,0,0.06)}
  .category-head{display:flex;justify-content:space-between;align-items:center;padding:8px 6px;cursor:pointer}
  .category-body{display:none;padding:8px 6px}
  .item-row{display:flex;align-items:center;gap:12px;padding:8px;border-radius:8px}
  .thumb{width:80px;height:80px;border-radius:8px;object-fit:cover;background:#eee;border:1px solid rgba(0,0,0,0.03);flex-shrink:0}
  .item-meta{flex:1;min-width:0}
  .item-title{font-weight:700;word-break:break-word}
  .selector{display:flex;align-items:center;gap:8px;flex-wrap:wrap}
  .step-btn{width:36px;height:36px;border-radius:8px;border:0;background:var(--accent);color:#fff;font-weight:800;cursor:pointer;flex-shrink:0}
  .qty-display{min-width:48px;text-align:center;font-weight:800;flex-shrink:0}
  .add-btn{background:var(--accent);color:#fff;border:0;padding:8px 12px;border-radius:8px;cursor:pointer;font-weight:700;flex-shrink:0;white-space:nowrap}
  .in-cart{background:#2ea44f}
  /* Cart inline */
  .cart-float{position:fixed;left:12px;right:12px;bottom:72px;background:var(--card);padding:10px;border-radius:12px;display:flex;justify-content:space-between;align-items:center;box-shadow:0 8px 30px rgba(0,0,0,0.12);z-index:200}
  .cart-float.hidden{display:none}
  /* Cart page */
  .cart-list{margin:8px 0}
  .cart-item{display:flex;gap:12px;align-items:center;background:var(--card);padding:10px;border-radius:8px;margin-bottom:8px}
  .cart-item .meta{flex:1;min-width:0}
  .cart-actions{display:flex;gap:8px;margin-top:10px;flex-wrap:wrap}
  .btn{padding:10px 12px;border-radius:8px;border:0;cursor:pointer;font-weight:700}
  .btn.primary{background:var(--accent);color:#fff}
  .btn.danger{background:#e74c3c;color:#fff}
  .small{font-size:13px;color:var(--muted)}
  /* Modal */
  .modal-back{position:fixed;left:0;top:0;right:0;bottom:0;background:rgba(0,0,0,0.4);display:flex;align-items:center;justify-content:center;z-index:400}
  .modal{background:var(--card);padding:16px;border-radius:12px;width:92%;max-width:420px}
  .currency-list{display:flex;gap:8px;flex-wrap:wrap;margin:8px 0}
  .currency-card{padding:8px 10px;border-radius:8px;border:1px solid rgba(0,0,0,0.06);cursor:pointer}
  .copy-btn{background:#eee;border:0;padding:8px;border-radius:8px;cursor:pointer;margin-top:8px}
  /* Bottom nav */
  .bottom-nav{position:fixed;left:0;right:0;bottom:0;height:60px;background:#fff;border-top:1px solid #eee;display:flex;align-items:center;justify-content:space-around;z-index:300}
  .nav-item{flex:1;text-align:center;padding-top:6px;cursor:pointer;color:var(--muted)}
  .nav-item.active{color:var(--accent);font-weight:700}
  
  /* Mobile optimizations */
  @media (max-width: 480px) {
    .item-row {
      flex-direction: column;
      align-items: flex-start;
      gap: 12px;
    }
    .thumb {
      width: 100%;
      height: 120px;
      align-self: center;
    }
    .selector {
      width: 100%;
      justify-content: space-between;
    }
    .add-btn {
      flex-grow: 1;
      text-align: center;
    }
    .cart-actions {
      flex-direction: column;
    }
    .cart-actions .btn {
      width: 100%;
    }
    .cart-item {
      flex-direction: column;
      text-align: center;
    }
    .cart-item .thumb {
      width: 100px;
      height: 100px;
    }
  }

  @media (min-width: 481px) and (max-width: 768px) {
    .thumb {
      width: 90px;
      height: 90px;
    }
  }

  @media (min-width: 769px) {
    .thumb {
      width: 100px;
      height: 100px;
    }
  }
  
  @media(min-width:700){.grid{grid-template-columns:repeat(3,1fr)}}
</style>
</head>
<body>
<div class="container">

  <!-- PAGE: HOME (choose city) -->
  <div id="page-home" class="page active">
    <h2>Выберите город доставки</h2>
    <div class="grid" id="cityGrid"></div>
  </div>

  <!-- PAGE: PRODUCTS -->
  <div id="page-products" class="page">
    <div class="header">
      <div>
        <div class="current-city" id="selectedCityText">🏙 Город: —</div>
        <div class="small" id="instruction">Выберите товар и вариант</div>
      </div>
      <button class="change-city" onclick="goToHome()">🏙 Изменить город</button>
    </div>

    <div id="categoriesContainer"></div>
  </div>

  <!-- PAGE: CART -->
  <div id="page-cart" class="page">
    <div class="header">
      <div>
        <div style="font-weight:800">Корзина</div>
        <div class="small" id="cartCity">Город доставки: —</div>
      </div>
    </div>

    <div id="cartList" class="cart-list"></div>

    <div style="margin-top:10px">
      <div style="font-weight:800">Итого: <span id="totalGBP">0</span> £</div>
      <div class="small" id="totalConverted"> </div>
      <div class="cart-actions">
        <button class="btn danger" onclick="clearCart()">Очистить корзину</button>
        <button class="btn primary" onclick="openPayModal()">Оплатить</button>
      </div>
    </div>
  </div>

</div>

<!-- Floating cart preview -->
<div id="cartFloat" class="cart-float hidden">
  <div>
    <div style="font-weight:800">В корзине: <span id="cartCount">0</span> шт</div>
    <div class="small">Сумма: <span id="cartSum">0</span> £</div>
  </div>
  <div>
    <button class="btn" onclick="openPage('page-cart')">Открыть</button>
  </div>
</div>

<!-- Modal for payment -->
<div id="payModal" style="display:none">
  <div class="modal-back" id="modalBack">
    <div class="modal" role="dialog" aria-modal="true">
      <div style="display:flex;justify-content:space-between;align-items:center">
        <div style="font-weight:800">Оплата</div>
        <button onclick="closePayModal()" style="background:none;border:0;font-size:18px;cursor:pointer">✕</button>
      </div>

      <div style="margin-top:10px">
        <div class="small">Выберите валюту для оплаты</div>
        <div class="currency-list" id="currencyList"></div>
      </div>

      <div id="payDetails" style="margin-top:10px;display:none">
        <div style="font-weight:800" id="paySummary"></div>
        <div class="small" style="margin-top:6px">Адрес для перевода:</div>
        <div style="word-break:break-all;margin-top:6px;background:#f7f7f7;padding:8px;border-radius:8px" id="walletAddr"></div>
        <button class="copy-btn" onclick="copyWallet()">Копировать адрес</button>
        <div style="margin-top:10px;display:flex;gap:8px">
          <button class="btn primary" onclick="payConfirm()">Я оплатил (пока заглушка)</button>
          <button class="btn" onclick="closePayModal()">Закрыть</button>
        </div>
      </div>

    </div>
  </div>
</div>

<!-- Bottom nav -->
<div class="bottom-nav">
  <div class="nav-item active" data-page="page-home" onclick="navTo(event)">Главная</div>
  <div class="nav-item" data-page="page-products" onclick="navTo(event)">Товары</div>
  <div class="nav-item" data-page="page-cart" onclick="navTo(event)">Корзина</div>
</div>

<script>
/* ===== DATA (from your Python) ===== */
const submenus = {
  "Товар 1": ["1.🍍Цвет🍍","2.🍒Цвет🍒","3.💮Цвет💮","4.🍃Цвет🍃","5.♥️Цвет♥️","6.🐘Цвет🐘","7.🍫Цвет🍫","8.🧁Цвет🧁"],
  "Товар 2": ["1.🥥Цвет🥥","2.🧊Цвет🧊","3.❄️Цвет❄️"],
  "Товар 3": ["1.💊Цвет💊","2.🍄Цвет🍄","3.👽Цвет👽"],
  "Товар 4": ["1.🌈Цвет🌈","2.🥭Цвет🥭","3.🔥Цвет🔥"],
  "Товар 5": ["1.🍏Цвет🍏","2.🍓Цвет🍓","3.🌴Цвет🌴","4.🍓Цвет🍓","5.🍋Цвет🍋","6.🍇Цвет🍇","7.💜Цвет💜"],
  "Товар 6": ["1.🍫Цвет🍫","2.🎁Цвет🎁","3.🎁🎁Цвет🎁🎁"]
};

const custom_quantity_prices = {
  "1.🍍Цвет🍍": {3.5:40,7:70,14:130},
  "2.🍒Цвет🍒": {3.5:40,7:70,14:130},
  "3.💮Цвет💮": {3.5:40,7:70,14:130},
  "4.🍃Цвет🍃": {3.5:80,7:150,14:270,28:450},
  "5.♥️Цвет♥️": {3.5:40,7:70,14:130},
  "6.🐘Цвет🐘": {3.5:40,7:70,14:130},
  "7.🍫Цвет🍫": {3.5:40,7:80,14:120},
  "8.🧁Цвет🧁": {1:70,2:120,3:160},
  "1.🥥Цвет🥥": {1:70,2:120,3:160},
  "2.🧊Цвет🧊": {1:17,2:30,4:55,6:90},
  "3.❄️Цвет❄️": {1:25,2:45,3:60,4:80},
  "1.💊Цвет💊": {1:10,2:20,3:25,6:45,12:80},
  "2.🍄Цвет🍄": {3.5:40,7:70,14:130},
  "3.👽Цвет👽": {2.5:320,5:500,7.5:650},
  "1.🌈Цвет🌈": {5:30,10:55,15:100,25:170},
  "2.🥭Цвет🥭": {5:30,10:55,15:100,25:170},
  "3.🔥цвет🔥": {1:35,2:60,4:100},
  "🍏Цвет🍏": {5:120},
  "🍓цвет🍓": {5:120},
  "🌴Цвет🌴": {5:120},
  "🍓Цвет🍓": {2:80},
  "🍋Цвет🍋": {2:80},
  "🍇Цвет🍇": {2:80},
  "💜Цвет💜": {2:80},
  "🍫Цвет🍫": {14:90},
  "🎁Цвет🎁": {21:150},
  "🎁🎁Цвет🎁🎁": {19:170}
};

const category_images = {
  "Товар 1":[
    "https://i.postimg.cc/TYSLvKht/IMG-20251001-143808-938.jpg",
    "https://i.postimg.cc/xTqJZvjh/IMG-20251001-143810-989.jpg",
    "https://i.postimg.cc/wTPyY13G/IMG-20251001-143813-440.jpg"
  ],
  "Товар 2":[
    "https://i.postimg.cc/44YHLvxL/IMG-20251001-143824-749.jpg",
    "https://i.postimg.cc/bY4DKGZ6/IMG-20251001-143827-144.jpg",
    "https://i.postimg.cc/nVNj6sXS/IMG-20251001-143828-170.jpg"
  ],
  "Товар 3":[
    "https://i.postimg.cc/DfRJtWSx/IMG-20251001-143830-106.jpg",
    "https://i.postimg.cc/Y2TGJ4vy/IMG-20251001-143832-634.jpg",
    "https://i.postimg.cc/c1PgVKKZ/IMG-20251001-143834-526.jpg"
  ],
  "Товар 4":[
    "https://i.postimg.cc/KvLkFZLy/IMG-20251001-143835-844.jpg",
    "https://i.postimg.cc/8PWJD1WS/IMG-20251001-143837-819.jpg",
    "https://i.postimg.cc/9XsRv44X/IMG-20251001-143840-097.jpg"
  ],
  "Товар 5":[
    "https://i.postimg.cc/7YqXJQVD/IMG-20251001-133953-876.jpg",
    "https://i.postimg.cc/T3w9CLFk/IMG-20251001-133909-190.jpg"
  ],
  "Товар 6":[
    "https://i.postimg.cc/yx8PtDWJ/fwgwtwtgwrg.jpg",
    "https://i.postimg.cc/dVY7VzmX/image.png",
    "https://i.postimg.cc/bwJT3DWm/234324.png"
  ]
};

const currencies = {
  "BNB":0.0014,
  "ETH":0.0003,
  "USDT":1.34,
  "SOL":0.0067,
  "USDC":1.34
};

const wallet_addresses = {
  "BNB":"0xF879a1050307C2E7272CF57A9a6AF6088A307d4B",
  "ETH":"0xF879a1050307C2E7272CF57A9a6AF6088A307d4B",
  "USDT":"0xF879a1050307C2E7272CF57A9a6AF6088A307d4B",
  "SOL":"9JfQ2UhDnBXkGSMceVjWEjAnfkGXFjQMkGmRkwZkBKK8",
  "USDC":"0xF879a1050307C2E7272CF57A9a6AF6088A307d4B"
};

/* ===== Utilities ===== */
function normalizeKey(s){ return String(s||'').toLowerCase().replace(/[\s\._]/g,'').normalize('NFKD'); }
function findPriceKey(color){
  if (custom_quantity_prices[color]) return color;
  const norm = normalizeKey(color);
  for (const k of Object.keys(custom_quantity_prices)){
    if (normalizeKey(k) === norm) return k;
  }
  // fallback try add dot after first digit
  const m = color.match(/^(\d)(.*)/);
  if (m){
    const try1 = m[1]+'.'+m[2];
    if (custom_quantity_prices[try1]) return try1;
  }
  return null;
}

/* ===== App state ===== */
let selectedCity = null;
let cart = []; // items: {product, color, qty, priceGBP, count}
const cityList = ["Москва","Санкт-Петербург","Казань","Екатеринбург","Новосибирск","Нижний Новгород","Ростов-на-Дону","Краснодар","Самара","Челябинск"];

/* ===== Build city grid ===== */
const cityGrid = document.getElementById('cityGrid');
cityList.forEach(c=>{
  const b = document.createElement('button');
  b.className='city-card';
  b.textContent = c;
  b.onclick = ()=>selectCity(c);
  cityGrid.appendChild(b);
});

/* ===== Navigation helpers ===== */
function navTo(e){
  const page = e.currentTarget.dataset.page;
  openPage(page);
  document.querySelectorAll('.nav-item').forEach(n=>n.classList.remove('active'));
  e.currentTarget.classList.add('active');
}

function openPage(id){
  document.querySelectorAll('.page').forEach(p=>p.classList.remove('active'));
  document.getElementById(id).classList.add('active');
  
  // Скрывать плавающую корзину на странице корзины
  const cartFloat = document.getElementById('cartFloat');
  if (id === 'page-cart') {
    cartFloat.classList.add('hidden');
  } else if (cart.length > 0) {
    cartFloat.classList.remove('hidden');
  }
  
  // when moving to products, ensure categories present
  if (id==='page-products'){ renderCategories() }
  if (id==='page-cart'){ renderCart() }
}

/* ===== City selection ===== */
function selectCity(city){
  selectedCity = city;
  document.getElementById('selectedCityText').textContent = '🏙 Город: ' + city;
  document.getElementById('cartCity').textContent = 'Город доставки: ' + city;
  openPage('page-products');
  // update nav active
  document.querySelectorAll('.nav-item').forEach(n=>n.classList.remove('active'));
  document.querySelector('.nav-item[data-page="page-products"]').classList.add('active');
  // show categories
  renderCategories();
}

function goToHome(){ openPage('page-home'); document.querySelectorAll('.nav-item').forEach(n=>n.classList.remove('active')); document.querySelector('.nav-item[data-page="page-home"]').classList.add('active'); }

/* ===== Build categories UI ===== */
function renderCategories(){
  const container = document.getElementById('categoriesContainer');
  container.innerHTML = '';
  Object.keys(submenus).forEach(prod=>{
    const cat = document.createElement('div'); cat.className='category';
    const head = document.createElement('div'); head.className='category-head';
    head.innerHTML = `<div style="font-weight:800">${prod}</div><div class="small">▾</div>`;
    const body = document.createElement('div'); body.className='category-body';
    // populate color rows
    submenus[prod].forEach(color=>{
      const row = document.createElement('div'); row.className='item-row';
      // choose image: first image of category if exists
      const img = document.createElement('img'); img.className='thumb'; img.src = (category_images[prod] && category_images[prod][0]) || '';
      img.onerror = function() { this.style.display = 'none'; };
      const meta = document.createElement('div'); meta.className='item-meta';
      meta.innerHTML = `<div class="item-title">${color}</div><div class="small">Выберите количество и добавьте в корзину</div>`;
      // Create selector for gradations
      const sel = document.createElement('div'); sel.className='selector';
      // Determine gradations:
      const priceKey = findPriceKey(color);
      let grads = [];
      if (priceKey) {
        grads = Object.keys(custom_quantity_prices[priceKey]).map(x => parseFloat(x)).sort((a,b)=>a-b);
      } else {
        // fallback simple: [1]
        grads = [1];
      }
      let idx = 0;
      const minus = document.createElement('button'); minus.className='step-btn'; minus.textContent='−';
      const plus = document.createElement('button'); plus.className='step-btn'; plus.textContent='+';
      const qtyDisplay = document.createElement('div'); qtyDisplay.className='qty-display'; qtyDisplay.textContent = grads[idx] + (String(grads[idx]).indexOf('.')>-1 ? ' g' : ' g');
      const priceSpan = document.createElement('div'); priceSpan.className='small'; priceSpan.style.marginLeft='8px';
      const addBtn = document.createElement('button'); addBtn.className='add-btn'; addBtn.textContent='Добавить в корзину';
      // update price function
      function updateDisplay(){
        const q = grads[idx];
        qtyDisplay.textContent = (Number.isInteger(q) ? q : q) + ' g';
        const pKey = priceKey;
        const price = pKey ? custom_quantity_prices[pKey][q] : 0;
        priceSpan.textContent = price + ' £';
      }
      minus.onclick = (ev)=>{ ev.stopPropagation(); idx = Math.max(0, idx-1); updateDisplay(); };
      plus.onclick = (ev)=>{ ev.stopPropagation(); idx = Math.min(grads.length-1, idx+1); updateDisplay(); };
      // add to cart onclick
      addBtn.onclick = (ev)=>{
        ev.stopPropagation();
        const q = grads[idx];
        const pKey = priceKey;
        const price = pKey ? custom_quantity_prices[pKey][q] : 0;
        addToCart({product:prod, color:color, qty:q, priceGBP:price});
        // visual feedback: change button to ✅ В корзине for 1.5s
        const oldText = addBtn.textContent;
        addBtn.textContent = '✅ В корзине';
        addBtn.classList.add('in-cart');
        setTimeout(()=>{ addBtn.textContent = oldText; addBtn.classList.remove('in-cart'); }, 1500);
      };
      // assemble
      sel.appendChild(minus); sel.appendChild(qtyDisplay); sel.appendChild(plus); sel.appendChild(priceSpan); sel.appendChild(addBtn);
      updateDisplay();
      row.appendChild(img); row.appendChild(meta); row.appendChild(sel);
      body.appendChild(row);
    });
    head.onclick = ()=>{ const open = body.style.display==='block'; document.querySelectorAll('.category-body').forEach(b=>b.style.display='none'); body.style.display = open? 'none' : 'block'; };
    cat.appendChild(head); cat.appendChild(body); container.appendChild(cat);
  });
}

/* ===== Cart logic ===== */
function addToCart(item){
  // item: {product,color,qty,priceGBP}
  const idx = cart.findIndex(it => it.product===item.product && it.color===item.color && it.qty===item.qty && it.priceGBP===item.priceGBP);
  if (idx>=0){ cart[idx].count += 1; } else { item.count = 1; cart.push(item); }
  refreshCartFloat();
}

function refreshCartFloat(){
  const count = cart.reduce((s,i)=>s+i.count,0);
  const sum = cart.reduce((s,i)=>s + i.priceGBP * i.count, 0);
  document.getElementById('cartCount').textContent = count;
  document.getElementById('cartSum').textContent = sum.toFixed(2);
  const cf = document.getElementById('cartFloat');
  
  // Показывать плавающую корзину только если есть товары И мы НЕ на странице корзины
  const isCartPage = document.getElementById('page-cart').classList.contains('active');
  cf.classList.toggle('hidden', count===0 || isCartPage);
}

function renderCart(){
  const list = document.getElementById('cartList');
  list.innerHTML = '';
  if (!selectedCity){
    document.getElementById('cartCity').textContent = 'Город доставки: —';
  } else {
    document.getElementById('cartCity').textContent = 'Город доставки: ' + selectedCity;
  }
  if (cart.length===0) { list.innerHTML = '<div class="small">Корзина пуста</div>'; document.getElementById('totalGBP').textContent = '0.00'; document.getElementById('totalConverted').textContent = ''; return; }
  cart.forEach((it, idx)=>{
    const el = document.createElement('div'); el.className='cart-item';
    const img = document.createElement('img'); img.className='thumb'; img.src = (category_images[it.product] && category_images[it.product][0]) || '';
    img.onerror = function() { this.style.display = 'none'; };
    const meta = document.createElement('div'); meta.className='meta';
    meta.innerHTML = `<div style="font-weight:800">${it.product}</div><div class="small">${it.color} • ${it.qty} g</div><div class="small">Цена: ${it.priceGBP} £ • Кол-во: ${it.count}</div>`;
    const controls = document.createElement('div');
    controls.innerHTML = `<div style="text-align:right;font-weight:800">${(it.priceGBP*it.count).toFixed(2)} £</div>
      <div style="margin-top:8px;display:flex;gap:6px;align-items:center;justify-content:flex-end">
        <button class="step-btn" onclick="decCartItem(${idx})">−</button>
        <div style="min-width:24px;text-align:center">${it.count}</div>
        <button class="step-btn" onclick="incCartItem(${idx})">+</button>
        <button class="step-btn" style="background:#cc3333" onclick="removeCartItem(${idx})">✕</button>
      </div>`;
    el.appendChild(img); el.appendChild(meta); el.appendChild(controls);
    list.appendChild(el);
  });
  const total = cart.reduce((s,i)=>s + i.priceGBP * i.count,0);
  document.getElementById('totalGBP').textContent = total.toFixed(2);
  document.getElementById('totalConverted').textContent = ''; // updated in modal when currency chosen
}

function incCartItem(i){ cart[i].count += 1; renderCart(); refreshCartFloat(); }
function decCartItem(i){ cart[i].count = Math.max(1, cart[i].count - 1); renderCart(); refreshCartFloat(); }
function removeCartItem(i){ cart.splice(i,1); renderCart(); refreshCartFloat(); }
function clearCart(){ cart = []; renderCart(); refreshCartFloat(); }

/* ===== Payment modal logic (show wallet after currency chosen) ===== */
const currencyListEl = document.getElementById('currencyList');
const payModalEl = document.getElementById('payModal');
const payDetailsEl = document.getElementById('payDetails');
const paySummaryEl = document.getElementById('paySummary');
const walletAddrEl = document.getElementById('walletAddr');

function openPayModal(){
  if (cart.length===0){ alert('Корзина пуста'); return; }
  // build currency buttons
  currencyListEl.innerHTML = '';
  Object.keys(currencies).forEach(c=>{
    const cc = document.createElement('div'); cc.className='currency-card'; cc.textContent = c;
    cc.onclick = ()=>selectCurrency(c);
    currencyListEl.appendChild(cc);
  });
  payDetailsEl.style.display = 'none';
  payModalEl.style.display = 'block';
}

function closePayModal(){ payModalEl.style.display = 'none'; }

function selectCurrency(cur){
  // compute totals
  const rate = currencies[cur] || 1;
  const totalGBP = cart.reduce((s,i)=>s + i.priceGBP * i.count,0);
  const converted = totalGBP * rate;
  const wallet = wallet_addresses[cur] || 'No address set';
  paySummaryEl.textContent = `${converted.toFixed(6)} ${cur}  —  (${totalGBP.toFixed(2)} £)`;
  walletAddrEl.textContent = wallet;
  payDetailsEl.style.display = 'block';
  // store current selection
  payDetailsEl.dataset.cur = cur;
  payDetailsEl.dataset.wallet = wallet;
  payDetailsEl.dataset.converted = converted.toFixed(8);
  // scroll into view
  payDetailsEl.scrollIntoView({behavior:'smooth'});
}

function copyWallet(){
  const addr = walletAddrEl.textContent;
  if (!addr) return;
  navigator.clipboard?.writeText(addr).then(()=>{ alert('Адрес скопирован в буфер') }).catch(()=>{ alert('Не удалось скопировать, скопируйте вручную') });
}

function payConfirm(){
  // placeholder: we do NOT send data yet. just show alert and close modal.
  alert('Оплата — пока заглушка. Адрес можно скопировать и использовать в кошельке.');
  closePayModal();
}

/* ===== Init & small helpers ===== */
document.addEventListener('DOMContentLoaded', ()=>{
  // init nav state
  window.Telegram?.WebApp?.ready();
  // default: show home page (already)
  refreshCartFloat();
  // place nav handlers
  document.querySelectorAll('.nav-item').forEach(n=>n.onclick = (e)=>{ navTo(e) });
});

/* For debug: expose some functions */
window.renderCategories = renderCategories;
window.selectCity = selectCity;
window.openPage = openPage;
</script>
</body>
</html>